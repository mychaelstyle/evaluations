"""
Django settings for evaluations project.

Generated by 'django-admin startproject' using Django 4.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os
import environ
from django.utils.translation import gettext_lazy as _

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

env = environ.Env()
env.read_env(os.path.join(BASE_DIR, '.env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
#SECRET_KEY = 'django-insecure--=vj6^(d*ro4a3tv&^&t(yw23*w0xjgvflfmb^cq4#=%^+$*c6'
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = True
DEBUG = env('DEBUG')

ALLOWED_HOSTS = [env('ALLOWED_HOST'),]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_boost',
    'mathfilters',
    'stdimage',
    'adminlte3',
    'adminlte3_theme',
    'account.apps.AccountConfig',
    'competency.apps.CompetencyConfig',
    'target.apps.TargetConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'target.middlewares.TargetCreateFormMiddleware'
]

ROOT_URLCONF = 'evaluations.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
          os.path.join(BASE_DIR, 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'evaluations.context_processors.site_common_texts'
            ],
        },
    },
]

WSGI_APPLICATION = 'evaluations.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        #'ENGINE': 'django.db.backends.sqlite3',
        #'NAME': BASE_DIR / 'db.sqlite3',
        'ENGINE': env('DB_ENGINE'),
        'PORT': env('DB_PORT'),
        'NAME': env('DB_NAME'),
        'USER': env('DB_USER'),
        'PASSWORD': env('DB_PASSWORD'),
        'HOST': env('DB_HOST'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'ja'

TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_TZ = True

LANGUAGES = [
    ('en', _('English')),
    ('ja', _('Japanese')),
]

LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static")

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
        'LOCATION': 'django_cache',
    }
}
SESSION_ENGINE = 'django.contrib.sessions.backends.cache'

# User model
AUTH_USER_MODEL = 'account.User'

# Login
LOGIN_URL = '/login'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL='/login'

INDUSTORIES = (
    (1,"メーカー：食品・農林・水産"),
    (11,"メーカー：建設・住宅・インテリア"),
    (21,"メーカー：遷移・化学・薬品・化粧品"),
    (31,"メーカー：鉄鋼・金属・鉱業"),
    (41,"メーカー：機械・プラント"),
    (51,"メーカー：電子・電気機器"),
    (61,"メーカー：自動車・輸送容器機"),
    (71,"メーカー：精密・医療機器"),
    (81,"メーカー：飲茶靴・事務機器関連"),
    (91,"メーカー：スポーツ・玩具"),
    (101,"メーカー：その他メーカー"),
    (111,"商社：総合商社"),
    (121,"商社：専門商社"),
    (131,"小売：百貨店・スーパー"),
    (141,"小売：コンビニ"),
    (151,"小売：専門店"),
    (161,"金融：銀行・証券"),
    (171,"金融：クレジット"),
    (181,"金融：信販・リース"),
    (191,"金融：その他金融"),
    (201,"金融：生保・損保"),
    (211,"サービス・インフラ：不動産"),
    (221,"サービス・インフラ：鉄道・航空・運輸・物流"),
    (231,"サービス・インフラ：電力・ガス・エネルギー"),
    (241,"サービス・インフラ：フードサービス"),
    (251,"サービス・インフラ：ホテル・旅行"),
    (261,"サービス・インフラ：医療・福祉"),
    (271,"サービス・インフラ：アミューズメント・レジャー"),
    (281,"サービス・インフラ：その他サービス"),
    (291,"サービス・インフラ：コンサルティング・調査"),
    (301,"サービス・インフラ：人材サービス"),
    (311,"サービス・インフラ：教育"),
    (321,"ソフトウェア：ソフトウェア"),
    (331,"ソフトウェア：インターネット"),
    (341,"ソフトウェア：通信"),
    (351,"広告・出版・マスコミ：放送"),
    (361,"広告・出版・マスコミ：新聞"),
    (371,"広告・出版・マスコミ：出版"),
    (381,"広告・出版・マスコミ：広告"),
    (391,"官公庁・公社・団体：公社・団体"),
    (401,"官公庁・公社・団体：官公庁"),
    (999,_("others"))
)

GRADES = [
    (0, _("students")),
    (1, _("new_graduates")),
    (5, _("juniors")),
    (10, _("regular_members")),
    (15, _("team_leaders")),
    (20, _("managers")),
    (25, _("heads_of_section")),
    (30, _("board_members"))
]
